from uncertainties import ufloat as uf
from math import pi
import numpy as np

# ----- DRÁT -----
r   = uf(19.28  , 0.01  ) * 0.001
n_0 = uf(147    , 0.5   ) * 0.001
n   = uf(116    , 0.5   ) * 0.001
L   = uf(810    , 1     ) * 0.001
l_0 = uf(1156.14, 1.2   ) * 0.001
m   = uf(1.4    , 0     )
d   = uf(0.51   , 0.01  ) * 0.001

delta_l = (r * (n_0 - n)) / (2 * L)

E = ( 4 * l_0 * m * 9.81 ) / ( delta_l * pi * d**2 )

print("delta_l:", delta_l)
print("E:", E)

# ----- TRÁMEK -----
l   = uf(412    , 1     ) * 0.001
a_o = uf(11.98  , 0.02  ) * 0.001
b_o = uf(1.95   , 0.01  ) * 0.001
a_m = uf(11.84  , 0.03  ) * 0.001
b_m = uf(1.98   , 0.01  ) * 0.001
y_o = uf(1      , 0.05  ) * 0.001
y_m = uf(1.83   , 0.05  ) * 0.001
m   = uf(0.1    , 0     )

E_o = (m * 9.81 * l**3) / (4 * y_o * a_o * b_o**3)
E_m = (m * 9.81 * l**3) / (4 * y_m * a_m * b_m**3)

print("E_o:", E_o)
print("E_m:", E_m)

# ----- GRAF DRÁT -----

r   = 19.28   * 0.001
n_0 = 147     * 0.001
L   = 810     * 0.001
l_0 = 1156.14 * 0.001
d   = 0.51    * 0.001

a_n = np.array([
    144.8 * 0.001,
    142.3 * 0.001,
    140.0 * 0.001,
    137.8 * 0.001,
    135.8 * 0.001,
    133.3 * 0.001,
    131.3 * 0.001,
    129.0 * 0.001,
    126.8 * 0.001,
    124.8 * 0.001,
    122.5 * 0.001,
    120.3 * 0.001,
    118.0 * 0.001,
    116.0 * 0.001,
    ])
a_m_drat = np.array(
    [(x+1) * 0.1 for x in range(14)]
    )

a_delta_l = (r * (n_0 - a_n)) / (2 * L)

a_sigma =  4 * l_0 * a_m_drat * 9.81 
a_epsilon = a_delta_l * pi * d**2

for i in range(14):
    print("{0}, {1}".format(a_epsilon[i], a_sigma[i]))

print("-----")

# ----- GRAF TRÁMEK -----
l   = 0.412
a_o = 11.98 * 0.001
b_o = 1.95  * 0.001
a_m = 11.84 * 0.001
b_m = 1.98  * 0.001

a_y_o = np.array([
    0.10 * 0.001,
    0.20 * 0.001,
    0.30 * 0.001,
    0.40 * 0.001,
    0.50 * 0.001,
    0.60 * 0.001,
    0.70 * 0.001,
    0.80 * 0.001,
    0.90 * 0.001,
    1.00 * 0.001,
    ])
a_y_m = np.array([
    0.18 * 0.001,
    0.38 * 0.001,
    0.53 * 0.001,
    0.73 * 0.001,
    0.90 * 0.001,
    1.08 * 0.001,
    1.28 * 0.001,
    1.48 * 0.001,
    1.63 * 0.001,
    1.83 * 0.001,
    ])
a_m = np.array([
    10  * 0.001,
    20  * 0.001,
    30  * 0.001,
    40  * 0.001,
    50  * 0.001,
    60  * 0.001,
    70  * 0.001,
    80  * 0.001,
    90  * 0.001,
    100 * 0.001,
    ])

a_E_o_num = (a_m * 9.81 * l**3) 
a_E_o_den = (4 * a_y_o * a_o * b_o**3)
a_E_m_num = (a_m * 9.81 * l**3)
a_E_m_den = (4 * a_y_m * a_m * b_m**3)

for i in range(10):
    print("{0}, {1}".format(a_E_o_den[i], a_E_o_num[i]))

print("-----")

for i in range(10):
    print("{0}, {1}".format(a_E_m_den[i], a_E_m_num[i]))